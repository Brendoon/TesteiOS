//
//  FundViewController.swift
//  TesteiOS
//
//  Created by Brendoon Ryos on 21/02/19.
//  Copyright (c) 2019 Brendoon Ryos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FundDisplayLogic: class {
  func displaySomething(viewModel: Fund.ViewModel)
}

class FundViewController: UIViewController, FundDisplayLogic {
  var interactor: FundBusinessLogic?
  var router: (NSObjectProtocol & FundRoutingLogic & FundDataPassing)?

  // MARK: Object lifecycle
  init() {
    super.init(nibName: .none, bundle: .none)
    title = "Investimento"
    navigationItem.rightBarButtonItem = UIBarButtonItem(image: UIImage(named: "share"), style: .plain, target: nil, action: nil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = FundInteractor()
    let presenter = FundPresenter()
    let router = FundRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View lifecycle
  override func viewDidLoad() {
    super.viewDidLoad()
    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething() {
    let request = Fund.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: Fund.ViewModel) {
    //nameTextField.text = viewModel.name
  }
}
